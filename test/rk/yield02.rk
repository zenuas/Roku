
sub co() [String]
	var two = "two"
	yield("one")
	yield(two)
	yield("three")

var xs = co()

#=>one
#=>two
#=>three
var p1 = next(xs)
print(p1.1)
var p2 = next(p1.2)
print(p2.1)
var p3 = next(p2.2)
print(p3.1)

###
ローカル変数の含まれるコルーチンは以下の通り変換する

struct Co$struct
	var state = 0
	var value: String
	var next: Co$struct?
	var locals: Co$local

struct Co$local
	var two: String

sub next(self: Co$struct) [String, Co$struct]
	if self.next is Co$struct then return((self.value, self.next))
	if self.state == 1 then goto state1_
	if self.state == 2 then goto state2_
	if self.state == 3 then goto state3_
	if self.state == -1 then goto end_
	
	self.locals.two = "two"
	
	# yield("one")
	self.value = "one"
	self.next = Co$struct()
	self.next.state = 1
	self.next.locals = self.locals
	return((self.value, self.next))
	state1_:
	
	# yield(two)
	self.value = self.locals.two
	self.next = Co$struct()
	self.next.state = 2
	self.next.locals = self.locals
	return((self.value, self.next))
	state2_:
	
	# yield("three")
	self.value = "three"
	self.next = Co$struct()
	self.next.state = 3
	self.next.locals = self.locals
	return((self.value, self.next))
	state3_:
	
	end_:
	self.state = -1
	return((_, self))
	

sub co() [String]
	var self = Co$struct()
	self.locals = Co$local()
	return(self)

###

###start

###end
