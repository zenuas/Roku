
var f = (x, y) => print(x + y)

#=>3
f(1, 2)

#=>helloworld
f("hello", "world")

###
複数の引数のあるラムダ式

ラムダ式のARROWが出現前にARROWの左側が還元還元衝突を起こす
衝突回避のため字句解析側で先読みを行いLAMBDA_STARTを入れる
###

###start
.assembly extern System.Console { .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A) }
.assembly extern System.Runtime { .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A) }
.assembly extern mscorlib { .publickeytoken = (B7 7A 5C 56 19 34 E0 89) }
.assembly sub07 {}

.class interface public abstract '#RTTI'
{
    .method public hidebysig newslot abstract virtual instance int32 '#GetTypeNo'() {}
    .method public hidebysig newslot abstract virtual instance class [System.Runtime]System.Type[] '#GetTypeGenerics'() {}
}

.method public static void main()
{
    .entrypoint
    .maxstack 3
    .locals(
        [0] class [mscorlib]System.Action`2<int32, int32> '',
        [1] class [mscorlib]System.Action`2<string, string> ''
    )
    
    ldnull
    ldftn void 'anonymous#0'(int32, int32)
    newobj instance void class [mscorlib]System.Action`2<int32, int32>::.ctor(object, native int)
    stloc.0
    
    ldnull
    ldftn void 'anonymous#0'(string, string)
    newobj instance void class [mscorlib]System.Action`2<string, string>::.ctor(object, native int)
    stloc.1
    
    ldloc.0
    ldc.i4.1
    ldc.i4.2
    callvirt instance void class [mscorlib]System.Action`2<int32, int32>::Invoke(!0, !1)
    
    ldloc.1
    ldstr "hello"
    ldstr "world"
    callvirt instance void class [mscorlib]System.Action`2<string, string>::Invoke(!0, !1)
    ret
}
.method public static void 'anonymous#0'(int32, int32)
{
    .maxstack 2
    .locals(
        [0] int32 $$1
    )
    
    ldarg.0
    ldarg.1
    add
    stloc.0
    
    ldloc.0
    call void class [System.Console]System.Console::WriteLine(int32)
    ret
}
.method public static void 'anonymous#0'(string, string)
{
    .maxstack 2
    .locals(
        [0] string $$1
    )
    
    ldarg.0
    ldarg.1
    call string class [System.Runtime]System.String::Concat(string, string)
    stloc.0
    
    ldloc.0
    call void class [System.Console]System.Console::WriteLine(string)
    ret
}
###end
