
struct Foo<a>
	var x: a

#=>2
var v = Foo<Int>()
v.x = 2
print(v.x)


#=>aa
var w = Foo<String>()
w.x = "aa"
print(w.x)

###
ジェネリック構造体のコンストラクタを呼び出す
###

###start
.assembly extern System.Console {}
.assembly extern System.Runtime {}
.assembly struct04 {}
.class public 'Foo<int32>'
{
    .field public static int32 '#type_no'
    .field public static class [System.Runtime]System.Object[] '#type_generics'
    
    .field public int32 x
    
    .method private static void .cctor()
    {
        ldc.i4.0
        stsfld int32 'Foo<int32>'::'#type_no'
        
        ldc.i4.1
        stsfld class [System.Runtime]System.Object[] 'Foo<int32>'::'#type_generics'
        ret
    }
    
    .method public void .ctor()
    {
        
        ret
    }
}
.class public 'Foo<string>'
{
    .field public static int32 '#type_no'
    .field public static class [System.Runtime]System.Object[] '#type_generics'
    
    .field public string x
    
    .method private static void .cctor()
    {
        ldc.i4.0
        stsfld int32 'Foo<string>'::'#type_no'
        
        ldc.i4.1
        stsfld class [System.Runtime]System.Object[] 'Foo<string>'::'#type_generics'
        ret
    }
    
    .method public void .ctor()
    {
        
        ret
    }
}
.method public static void main()
{
    .entrypoint
    .maxstack 2
    .locals(
        [0] class 'Foo<int32>' v,
        [1] int32 $$1,
        [2] class 'Foo<string>' w,
        [3] string $$2
    )
    
    newobj instance void class 'Foo<int32>'::.ctor()
    stloc.0
    
    ldloc.0
    ldc.i4.2
    stfld int32 class 'Foo<int32>'::x
    
    ldloc.0
    ldfld int32 class 'Foo<int32>'::x
    stloc.1
    
    ldloc.1
    call void class [System.Console]System.Console::WriteLine(int32)
    
    newobj instance void class 'Foo<string>'::.ctor()
    stloc.2
    
    ldloc.2
    ldstr "aa"
    stfld string class 'Foo<string>'::x
    
    ldloc.2
    ldfld string class 'Foo<string>'::x
    stloc.3
    
    ldloc.3
    call void class [System.Console]System.Console::WriteLine(string)
    ret
}
###end
