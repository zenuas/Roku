
sub co(two: String) [String]
	yield("one")
	yield(two)
	yield("three")

var xs = co("two")

#=>one
#=>two
#=>three
var p1 = next(xs)
print(p1.1)
var p2 = next(p1.2)
print(p2.1)
var p3 = next(p2.2)
print(p3.1)

###
引数の含まれるコルーチンは以下の通り変換する

struct Co$struct
	var state = 0
	var value: String
	var next: Co$struct?
	var locals: Co$local

struct Co$local
	var two: String

sub next(self: Co$struct) [String, Co$struct]
	if self.next is Co$struct then return((self.value, self.next))
	if self.state == 1 then goto state1_
	if self.state == 2 then goto state2_
	if self.state == 3 then goto state3_
	if self.state == -1 then goto end_
	
	# yield("one")
	self.value = "one"
	self.next = Co$struct()
	self.next.state = 1
	self.next.locals = self.locals
	return((self.value, self.next))
	state1_:
	
	# yield(two)
	self.value = self.locals.two
	self.next = Co$struct()
	self.next.state = 2
	self.next.locals = self.locals
	return((self.value, self.next))
	state2_:
	
	# yield("three")
	self.value = "three"
	self.next = Co$struct()
	self.next.state = 3
	self.next.locals = self.locals
	return((self.value, self.next))
	state3_:
	
	end_:
	self.state = -1
	return((_, self))
	

sub co(two: String) [String]
	var self = Co$struct()
	self.locals = Co$local()
	self.locals.two = two
	return(self)

###

###start
.assembly extern System.Console {}
.assembly extern System.Runtime {}
.assembly yield03 {}
.class public 'Co$0'
{
    .field public int32 state
    .field public string 'value'
    .field public object next
    .field public class 'CoLocal$0' local
    
    .method public void .ctor()
    {
        
        ldarg.0
        ldc.i4.0
        stfld int32 class 'Co$0'::state
        
        
        
        ret
    }
}
.class public 'CoLocal$0'
{
    .field public string two
    
    .method public void .ctor()
    {
        
        ret
    }
}
.class public 'Tuple#2<string, class Co$0>'
{
    .field public string '1'
    .field public class 'Co$0' '2'
    
    .method public void .ctor()
    {
        
        
        ret
    }
}
.method public static void main()
{
    .entrypoint
    .maxstack 1
    .locals(
        [0] class 'Co$0' xs,
        [1] class 'Tuple#2<string, class Co$0>' p1,
        [2] string $$1,
        [3] class 'Co$0' $$2,
        [4] class 'Tuple#2<string, class Co$0>' p2,
        [5] string $$3,
        [6] class 'Co$0' $$4,
        [7] class 'Tuple#2<string, class Co$0>' p3,
        [8] string $$5
    )
    
    ldstr "two"
    call class 'Co$0' co(string)
    stloc.0
    
    ldloc.0
    call class 'Tuple#2<string, class Co$0>' next(class 'Co$0')
    stloc.1
    
    ldloc.1
    ldfld string class 'Tuple#2<string, class Co$0>'::'1'
    stloc.2
    
    ldloc.2
    call void class [System.Console]System.Console::WriteLine(string)
    
    ldloc.1
    ldfld class 'Co$0' class 'Tuple#2<string, class Co$0>'::'2'
    stloc.3
    
    ldloc.3
    call class 'Tuple#2<string, class Co$0>' next(class 'Co$0')
    stloc.s 4
    
    ldloc.s 4
    ldfld string class 'Tuple#2<string, class Co$0>'::'1'
    stloc.s 5
    
    ldloc.s 5
    call void class [System.Console]System.Console::WriteLine(string)
    
    ldloc.s 4
    ldfld class 'Co$0' class 'Tuple#2<string, class Co$0>'::'2'
    stloc.s 6
    
    ldloc.s 6
    call class 'Tuple#2<string, class Co$0>' next(class 'Co$0')
    stloc.s 7
    
    ldloc.s 7
    ldfld string class 'Tuple#2<string, class Co$0>'::'1'
    stloc.s 8
    
    ldloc.s 8
    call void class [System.Console]System.Console::WriteLine(string)
    ret
}
.method public static class 'Co$0' co(string)
{
    .maxstack 2
    .locals(
        [0] class 'Co$0' $ret,
        [1] class 'CoLocal$0' $local
    )
    
    newobj instance void Co$0::.ctor()
    stloc.0
    
    newobj instance void CoLocal$0::.ctor()
    stloc.1
    
    ldloc.1
    ldarg.0
    stfld string class 'CoLocal$0'::two
    
    ldloc.0
    ldloc.1
    stfld class 'CoLocal$0' class 'Co$0'::local
    
    ldloc.0
    ret
    ret
}
.method public static class 'Tuple#2<string, class Co$0>' next(class 'Co$0')
{
    .maxstack 2
    .locals(
        [0] object $next_or_null,
        [1] class 'Co$0' $next,
        [2] string $value,
        [3] class 'Tuple#2<string, class Co$0>' $ret,
        [4] int32 $state,
        [5] class 'CoLocal$0' $local,
        [6] bool $cond,
        [7] int32 $m1,
        [8] string two
    )
    
    ldarg.0
    ldfld object class 'Co$0'::next
    stloc.0
    
    ldloc.0
    isinst class 'Co$0'
    ldnull
    cgt.un
    brfalse.s _cond0_1
    ldloc.0
    stloc.1
    
    ldarg.0
    ldfld string class 'Co$0'::'value'
    stloc.2
    
    ldloc.2
    ldloc.1
    call class 'Tuple#2<string, class Co$0>' 'Tuple#2#0'(string, class 'Co$0')
    stloc.3
    
    ldloc.3
    ret
    
_cond0_1:
    
    ldarg.0
    ldfld int32 class 'Co$0'::state
    stloc.s 4
    
    ldarg.0
    ldfld class 'CoLocal$0' class 'Co$0'::local
    stloc.s 5
    
    ldloc.s 4
    ldc.i4.1
    ceq
    stloc.s 6
    
    ldloc.s 6
    brfalse _cond1_2
    
    br _state1_6
    
_cond1_2:
    
    ldloc.s 4
    ldc.i4.2
    ceq
    stloc.s 6
    
    ldloc.s 6
    brfalse _cond2_3
    
    br _state2_7
    
_cond2_3:
    
    ldloc.s 4
    ldc.i4.3
    ceq
    stloc.s 6
    
    ldloc.s 6
    brfalse _cond3_4
    
    br _state3_8
    
_cond3_4:
    
    ldc.i4.1
    neg
    stloc.s 7
    
    ldloc.s 4
    ldloc.s 7
    ceq
    stloc.s 6
    
    ldloc.s 6
    brfalse _cond4_5
    
    br _end_9
    
_cond4_5:
    
    ldarg.0
    ldstr "one"
    stfld string class 'Co$0'::'value'
    
    newobj instance void Co$0::.ctor()
    stloc.1
    
    ldloc.1
    ldc.i4.1
    stfld int32 class 'Co$0'::state
    
    ldloc.1
    ldloc.s 5
    stfld class 'CoLocal$0' class 'Co$0'::local
    
    ldarg.0
    ldloc.1
    stfld object class 'Co$0'::next
    
    ldstr "one"
    ldloc.1
    call class 'Tuple#2<string, class Co$0>' 'Tuple#2#0'(string, class 'Co$0')
    stloc.3
    
    ldloc.3
    ret
    
_state1_6:
    
    ldloc.s 5
    ldfld string class 'CoLocal$0'::two
    stloc.s 8
    
    ldarg.0
    ldloc.s 8
    stfld string class 'Co$0'::'value'
    
    newobj instance void Co$0::.ctor()
    stloc.1
    
    ldloc.1
    ldc.i4.2
    stfld int32 class 'Co$0'::state
    
    ldloc.1
    ldloc.s 5
    stfld class 'CoLocal$0' class 'Co$0'::local
    
    ldarg.0
    ldloc.1
    stfld object class 'Co$0'::next
    
    ldloc.s 8
    ldloc.1
    call class 'Tuple#2<string, class Co$0>' 'Tuple#2#0'(string, class 'Co$0')
    stloc.3
    
    ldloc.3
    ret
    
_state2_7:
    
    ldarg.0
    ldstr "three"
    stfld string class 'Co$0'::'value'
    
    newobj instance void Co$0::.ctor()
    stloc.1
    
    ldloc.1
    ldc.i4.3
    stfld int32 class 'Co$0'::state
    
    ldloc.1
    ldloc.s 5
    stfld class 'CoLocal$0' class 'Co$0'::local
    
    ldarg.0
    ldloc.1
    stfld object class 'Co$0'::next
    
    ldstr "three"
    ldloc.1
    call class 'Tuple#2<string, class Co$0>' 'Tuple#2#0'(string, class 'Co$0')
    stloc.3
    
    ldloc.3
    ret
    
_state3_8:
    
_end_9:
    
    ldc.i4.1
    neg
    stloc.s 7
    
    ldarg.0
    ldloc.s 7
    stfld int32 class 'Co$0'::state
    
    ldnull
    ldarg.0
    call class 'Tuple#2<string, class Co$0>' 'Tuple#2#0'(string, class 'Co$0')
    stloc.3
    
    ldloc.3
    ret
    ret
}
.method public static class 'Tuple#2<string, class Co$0>' 'Tuple#2#0'(string, class 'Co$0')
{
    .maxstack 2
    .locals(
        [0] class 'Tuple#2<string, class Co$0>' $self
    )
    
    newobj instance void class 'Tuple#2<string, class Co$0>'::.ctor()
    stloc.0
    
    ldloc.0
    ldarg.0
    stfld string class 'Tuple#2<string, class Co$0>'::'1'
    
    ldloc.0
    ldarg.1
    stfld class 'Co$0' class 'Tuple#2<string, class Co$0>'::'2'
    
    ldloc.0
    ret
    ret
}
###end
