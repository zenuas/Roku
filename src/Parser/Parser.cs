

using Extensions;
using Roku.Node;


using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace Roku.Parser
{
    public partial class Parser : IParser<Token>
    {
        public List<Token> TokenStack { get; } = new List<Token>();
        public int[,] Tables { get; } = new int[,] {
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, -176, 0, 0, 0, -176, -176, 0, -176, 0, -176, 0, 0, -176, -176, -176, -176, 0, 0, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-4, 0, 0, 0, 0, 0, -4, 0, 0, 0, -4, -4, 0, -4, 0, -4, 0, 0, -4, -4, -4, -4, 0, 0, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 0, 0, -4, 0, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-5, 0, 0, 0, 0, 0, -5, 0, 0, 0, -5, -5, 0, -5, 0, -5, 0, 0, -5, -5, -5, -5, 0, 0, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, 0, 0, -5, 0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-6, 0, 0, 0, 0, 0, -6, 0, 0, 0, -6, -6, 0, -6, 0, -6, 0, 0, -6, -6, -6, -6, 0, 0, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, 0, 0, -6, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-7, 0, 0, 0, 0, 0, -7, 0, 0, 0, -7, -7, 0, -7, 0, -7, 0, 0, -7, -7, -7, -7, 0, 0, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, 0, 0, -7, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-8, 0, 0, 0, 0, 0, -8, 0, 0, 0, -8, -8, 0, -8, 0, -8, 0, 0, -8, -8, -8, -8, 0, 0, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, 0, 0, -8, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-9, 0, 0, 0, 0, 0, -9, 0, 0, 0, -9, -9, 0, -9, 0, -9, 0, 0, -9, -9, -9, -9, 0, 0, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, 0, 0, -9, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-10, 0, 0, 0, 0, 0, -10, 0, 0, 0, -10, -10, 0, -10, 0, -10, 0, 0, -10, -10, -10, -10, 0, 0, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, -10, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-11, 0, 0, 0, 0, 0, -11, 0, 0, 0, -11, -11, 0, -11, 0, -11, 0, 0, -11, -11, -11, -11, 0, 0, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, 0, 0, -11, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-12, 0, 0, 0, 0, 0, -12, 0, 0, 0, -12, -12, 0, -12, 0, -12, 0, 0, -12, -12, -12, -12, 0, 0, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, 0, 0, -12, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, -176, 0, 0, 0, -176, -176, 0, -176, 0, -176, 0, 0, -176, -176, -176, -176, 0, 0, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0},
                {-13, 0, 0, 0, 0, 0, -13, 0, 0, 0, -13, -13, 0, -13, -13, -13, 0, 0, -13, -13, -13, -13, 0, 0, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, 0, 0, -13, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-14, 0, 0, 0, 0, 0, -14, 0, 0, 0, -14, -14, 0, -14, 0, -14, 0, 0, -14, -14, -14, -14, 0, 0, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, 0, 0, -14, 0, 0, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-17, -17, -17, -17, 0, 0, -17, -17, 0, -17, -17, -17, 0, 0, 0, 0, -17, 0, -17, -17, -17, 0, 0, -17, 0, -17, -17, -17, -17, -17, -17, -17, 0, 0, 0, -17, -17, 0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-18, -18, -18, -18, 0, 0, -18, -18, 0, -18, -18, -18, 0, 0, 0, 0, -18, 0, -18, -18, -18, 0, 0, -18, 0, -18, -18, -18, -18, -18, -18, -18, 0, 0, 0, -18, -18, 0, 0, -18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-19, -19, -19, -19, 0, 0, -19, -19, 0, -19, -19, -19, 0, 0, 0, 0, -19, 0, -19, -19, -19, 0, 0, -19, 0, -19, -19, -19, -19, -19, -19, -19, 0, 0, 0, -19, -19, 0, 0, -19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-20, -20, -20, -20, 0, 0, -20, -20, 0, -20, -20, -20, 0, 0, 0, 0, -20, 0, -20, -20, -20, 0, 0, -20, 0, -20, -20, -20, -20, -20, -20, -20, 0, 0, 0, -20, -20, 0, 0, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-21, -21, -21, -21, 0, 0, -21, -21, 0, -21, -21, -21, 0, 0, 0, 0, -21, 0, -21, -21, -21, 0, 0, -21, 0, -21, -21, -21, -21, -21, -21, -21, 0, 0, 0, -21, -21, 0, 0, -21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, -176, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 24, 239, 43, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 42, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-22, -22, -22, -22, 0, 0, -22, -22, 0, -22, -22, -22, 0, 0, 0, 0, -22, 0, -22, -22, -22, 0, 0, -22, 0, -22, -22, -22, -22, -22, -22, -22, 0, 0, 0, -22, -22, 0, 0, -22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-23, -23, -23, -23, 0, 0, -23, -23, 0, -23, -23, -23, 0, 0, 0, 0, -23, 0, -23, -23, -23, 0, 0, -23, 0, -23, -23, -23, -23, -23, -23, -23, 0, 0, 0, -23, -23, 0, 0, -23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-24, -24, -24, -24, 0, 0, -24, -24, 0, -24, -24, -24, 0, 0, 0, 0, -24, 0, -24, -24, -24, 0, 0, -24, 0, -24, -24, -24, -24, -24, -24, -24, 0, 0, 0, -24, -24, 0, 0, -24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 206, 0, 0, 0, 0, 194, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 205, 0, 0, 0},
                {-25, -25, -25, -25, 0, 0, -25, -25, 0, -25, -25, -25, 0, 0, 0, 0, -25, 0, -25, -25, -25, 0, 0, -25, 0, -25, -25, -25, -25, -25, -25, -25, 0, 0, 0, -25, -25, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 242, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 245, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {-31, -31, -31, -31, 0, 0, -31, -31, 0, -31, -31, -31, 0, 0, 0, 0, -31, 0, -31, -31, -31, 0, 0, -31, 0, -31, -31, -31, -31, -31, -31, -31, 0, 0, 0, -31, -31, 0, 0, -31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 251, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-32, -32, -32, -32, 0, 0, -32, -32, 0, -32, -32, -32, 0, 0, 0, 0, -32, 0, -32, -32, -32, 0, 0, -32, 0, -32, -32, -32, -32, -32, -32, -32, 0, 0, 0, -32, -32, 0, 0, -32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {-33, -33, -33, -33, 0, 0, -33, -33, 0, -33, -33, -33, 0, 0, 0, 0, -33, 0, -33, -33, -33, 0, 0, -33, 0, -33, -33, -33, -33, -33, -33, -33, 0, 0, 0, -33, -33, 0, 0, -33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, -176, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 40, 239, 43, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 42, 0, 0},
                {0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-34, -34, -34, -34, 0, 0, -34, -34, 0, -34, -34, -34, 0, 0, 0, 0, -34, 0, -34, -34, -34, 0, 0, -34, 0, -34, -34, -34, -34, -34, -34, -34, 0, 0, 0, -34, -34, 0, 0, -34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -35, 0, 0, 0, 0, 0, -35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, -176, 224, -176, 0, 0, -176, -176, 0, -176, -176, -176, 0, -176, 0, -176, -176, 0, -176, -176, -176, -176, 0, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, 0, -176, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0},
                {0, -36, 0, 0, 0, 0, 0, -36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 257, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0},
                {0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0},
                {0, 0, -45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, -47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-48, 0, 0, 0, 0, 0, -48, 0, 0, 0, -48, -48, 0, -48, 0, -48, 0, 0, -48, -48, -48, -48, 0, 0, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, 0, 0, -48, 0, 0, -48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-49, 0, 0, 0, 0, 0, -49, 0, 0, 0, -49, -49, 0, -49, 0, -49, 0, 0, -49, -49, -49, -49, 0, 0, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, 0, 0, -49, 0, 0, -49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0},
                {-50, 0, 0, 0, 0, 0, -50, 0, 0, 0, -50, -50, 0, -50, 0, -50, 0, 0, -50, -50, -50, -50, 0, 0, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, 0, 0, -50, 0, 0, -50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -51, 0, 0, 0, 0, 0, 0, 0, 0, -51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -52, 0, 0, 0, 0, 0, 0, 0, 0, -52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -53, 0, 0, 0, 0, 0, 0, 0, 0, -53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 260, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -54, 0, 0, 0, 0, 0, 0, 0, 0, -54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, -55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, -56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0},
                {0, 0, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 261, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-58, 0, 0, 0, 0, 0, -58, 0, 0, 0, -58, -58, 0, -58, 0, -58, 0, 0, -58, -58, -58, -58, 0, 0, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, 0, 0, -58, 0, 0, -58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 262, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-59, 0, 0, 0, 0, 0, -59, 0, 0, 0, -59, -59, 0, -59, 0, -59, 0, 0, -59, -59, -59, -59, 0, 0, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, 0, 0, -59, 0, 0, -59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, -176, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 246, 86, 192, 139, 142, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, -176, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 246, 90, 192, 139, 142, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 96, 0},
                {97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 264, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 116, 0, 0},
                {0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, -176, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 246, 100, 192, 139, 142, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-64, 0, 0, 0, 0, 0, -64, 0, 0, 0, -64, -64, 0, -64, 0, -64, 0, 0, -64, -64, -64, -64, 0, 0, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, 0, 0, -64, 0, 0, -64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, -176, 0, 0, 0, -176, -176, 0, -176, 0, -176, 0, 0, -176, -176, -176, -176, 0, 0, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 266, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0},
                {-65, 0, 0, 0, 0, 0, -65, 0, 0, 0, -65, -65, 0, -65, 0, -65, 0, 0, -65, -65, -65, -65, 0, 0, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, 0, 0, -65, 0, 0, -65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-66, 0, 0, 0, 0, 0, -66, 0, 0, 0, -66, -66, 0, -66, 0, -66, 0, 0, -66, -66, -66, -66, 0, 0, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, 0, 0, -66, 0, 0, -66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 194, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 139, 0, 0, 267},
                {-69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -70, -70, 0, 0, 0, -70, 0, -70, -70, 0, -70, -70, 0, -70, 0, 0, 0, 0, 0, -70, -70, -70, -70, -70, 0, 0, -70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -71, -71, 0, 0, 0, -71, 0, -71, -71, 0, -71, -71, 0, -71, 0, 0, 0, 0, 0, -71, -71, -71, -71, -71, 0, 0, -71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 194, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 268, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -72, -72, 0, 0, 0, -72, 0, -72, -72, 0, -72, -72, 0, -72, 0, 0, 0, 0, 0, -72, -72, -72, -72, -72, 0, 0, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -75, -75, 0, 0, 0, 0, -75, 0, -75, 0, -75, 0, 0, 0, 0, 0, 0, 0, 0, -75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -76, -76, 0, 0, 0, 0, -76, 0, -76, 0, -76, 0, 0, 0, 0, 0, 0, 0, 0, -76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, -77, -77, 0, 0, 0, 0, -77, 0, -77, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-79, -79, -79, -79, 0, 0, -79, -79, 0, -79, -79, -79, 0, 0, 0, 0, -79, -79, -79, -79, -79, 0, 0, -79, 0, -79, -79, -79, -79, -79, -79, -79, 0, 0, 0, -79, -79, 0, 0, -79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 269, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-81, -81, -81, -81, 0, -81, -81, -81, 0, -81, -81, -81, 0, 0, 0, 0, -81, -81, -81, -81, -81, 0, 0, -81, 0, -81, -81, -81, -81, -81, -81, -81, 0, 0, 0, -81, -81, 0, 0, -81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 264, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 116, 0, 0},
                {0, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-82, -82, -82, -82, 0, -82, -82, -82, 0, -82, -82, -82, 0, 0, 0, 0, -82, -82, -82, -82, -82, 0, 0, -82, 0, -82, -82, -82, -82, -82, -82, -82, 0, 0, 0, -82, -82, 0, 0, -82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-83, -83, -83, -83, 0, -83, -83, -83, 0, -83, -83, -83, 0, 0, 0, 0, -83, -83, -83, -83, -83, 0, 0, -83, 0, -83, -83, -83, -83, -83, -83, -83, 0, 0, 0, -83, -83, 0, 0, -83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-84, -84, -84, -84, 0, -84, -84, -84, 0, -84, -84, -84, 0, 0, 0, 0, -84, -84, -84, -84, -84, 0, 0, -84, 0, -84, -84, -84, -84, -84, -84, -84, 0, 0, 0, -84, -84, 0, 0, -84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-85, -85, -85, -85, 0, -85, -85, -85, 0, -85, -85, -85, 0, 0, 0, 0, -85, -85, -85, -85, -85, 0, 0, -85, 0, -85, -85, -85, -85, -85, -85, -85, 0, 0, 0, -85, -85, 0, 0, -85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-86, -86, -86, -86, 0, -86, -86, -86, 0, -86, -86, -86, 0, 0, 0, 0, -86, -86, -86, -86, -86, 0, 0, -86, 0, -86, -86, -86, -86, -86, -86, -86, 0, 0, 0, -86, -86, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-87, -87, -87, -87, 0, -87, -87, -87, 0, -87, -87, -87, 0, 0, 0, 0, -87, -87, -87, -87, -87, 0, 0, -87, 0, -87, -87, -87, -87, -87, -87, -87, 0, 0, 0, -87, -87, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-88, -88, -88, -88, 0, -88, -88, -88, 0, -88, -88, -88, 0, 0, 0, 0, -88, -88, -88, -88, -88, 0, 0, -88, 0, -88, -88, -88, -88, -88, -88, -88, 0, 0, 0, -88, -88, 0, 0, -88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -89, -89, 0, 0, 0, 0, -89, 0, -89, 0, -89, 0, 0, 0, 0, 0, 0, 0, 0, -89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -90, -90, 0, 0, 0, 0, -90, 0, -90, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -92, 0, 0, 0, 0, -92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, -93, 0, -93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -95, -95, 0, 0, 0, 0, -95, 0, -95, 0, -95, 0, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, -96, -96, 0, 0, 0, 0, -96, 0, -96, 0, -96, 0, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 272, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 153, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 162, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 273, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 155, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-100, -100, -100, -100, 0, 0, -100, -100, 0, -100, -100, -100, 0, 0, 0, 0, -100, 0, -100, -100, -100, 0, 0, -100, 0, -100, -100, -100, -100, -100, -100, -100, 0, 0, 0, -100, -100, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, -176, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 246, 157, 192, 139, 142, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 162, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 273, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 159, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-101, -101, -101, -101, 0, 0, -101, -101, 0, -101, -101, -101, 0, 0, 0, 0, -101, 0, -101, -101, -101, 0, 0, -101, 0, -101, -101, -101, -101, -101, -101, -101, 0, 0, 0, -101, -101, 0, 0, -101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 162, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 273, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-102, -102, -102, -102, 0, 0, -102, -102, 0, -102, -102, -102, 0, 0, 0, 0, -102, 0, -102, -102, -102, 0, 0, -102, 0, -102, -102, -102, -102, -102, -102, -102, 0, 0, 0, -102, -102, 0, 0, -102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, -176, 0, 0, 0, -176, -176, 0, -176, 0, -176, 0, 0, -176, -176, -176, -176, 0, 0, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0},
                {-104, -104, -104, -104, 0, 0, -104, -104, 0, -104, -104, -104, 0, 0, 0, 0, -104, 0, -104, -104, -104, 0, 0, -104, 0, -104, -104, -104, -104, -104, -104, -104, 0, 0, 0, -104, -104, 0, 0, -104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-105, 0, 0, 0, 0, 0, -105, 0, 0, 0, -105, -105, 0, -105, 0, -105, 0, 0, -105, -105, -105, -105, 0, 0, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, 0, 0, -105, 0, 0, -105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-114, 0, 0, 0, 0, 0, -114, 0, 0, 0, -114, -114, 0, -114, 0, -114, 0, 0, -114, -114, -114, -114, 0, 0, -114, -114, -114, -114, -114, -114, -114, -114, -114, -114, 0, 0, -114, 0, 0, -114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-115, 0, 0, 0, 0, 0, -115, 0, 0, 0, -115, -115, 0, -115, 0, -115, 0, 0, -115, -115, -115, -115, 0, 0, -115, -115, -115, -115, -115, -115, -115, -115, -115, -115, 0, 0, -115, 0, 0, -115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, -176, 0, 0, 0, -176, -176, 0, 0, 0, 0, 225, 0, -176, -176, -176, 0, 0, 0, 0, -176, -176, -176, -176, -176, -176, -176, 0, 0, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 226, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-116, 0, 0, 0, 0, 0, -116, 0, 0, 0, -116, -116, 0, -116, 0, -116, 0, 0, -116, -116, -116, -116, 0, 0, -116, -116, -116, -116, -116, -116, -116, -116, -116, -116, 0, 0, -116, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, -176, 0, 0, 0, -176, -176, 0, 0, 0, 0, 225, 0, -176, -176, -176, 0, 0, 0, 0, -176, -176, -176, -176, -176, -176, -176, 0, 0, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 226, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 277, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-117, 0, 0, 0, 0, 0, -117, 0, 0, 0, -117, -117, 0, -117, 0, -117, 0, 0, -117, -117, -117, -117, 0, 0, -117, -117, -117, -117, -117, -117, -117, -117, -117, -117, 0, 0, -117, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, -176, 0, 0, 0, -176, -176, 0, 0, 0, 0, 225, 0, -176, -176, -176, 0, 0, 0, 0, -176, -176, -176, -176, -176, -176, -176, 0, 0, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 226, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 278, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-118, 0, 0, 0, 0, 0, -118, 0, 0, 0, -118, -118, 0, -118, 0, -118, 0, 0, -118, -118, -118, -118, 0, 0, -118, -118, -118, -118, -118, -118, -118, -118, -118, -118, 0, 0, -118, 0, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-119, 0, 0, 0, 0, 0, -119, 0, 0, 0, -119, -119, 0, -119, -119, -119, 0, 0, -119, -119, -119, -119, 0, 0, -119, -119, -119, -119, -119, -119, -119, -119, -119, -119, 0, 0, -119, 0, 0, -119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 280, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-120, 0, 0, 0, 0, 0, -120, 0, 0, 0, -120, -120, 0, -120, -120, -120, 0, 0, -120, -120, -120, -120, 0, 0, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, 0, 0, -120, 0, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-121, 0, 0, 0, 0, 0, -121, 0, 0, 0, -121, -121, 0, -121, -121, -121, 0, 0, -121, -121, -121, -121, 0, 0, -121, -121, -121, -121, -121, -121, -121, -121, -121, -121, 0, 0, -121, 0, 0, -121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-122, 0, 0, 0, 0, 0, -122, 0, 0, 0, -122, -122, 0, -122, -122, -122, 0, 0, -122, -122, -122, -122, 0, 0, -122, -122, -122, -122, -122, -122, -122, -122, -122, -122, 0, 0, -122, 0, 0, -122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-123, 0, 0, 0, 0, 0, -123, 0, 0, 0, -123, -123, 0, -123, -123, -123, 0, 0, -123, -123, -123, -123, 0, 0, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, 0, 0, -123, 0, 0, -123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-140, -140, -140, -140, -140, -140, -140, -140, 0, -140, -140, -140, 0, 0, 0, 0, -140, -140, -140, -140, -140, 0, 0, -140, 0, -140, -140, -140, -140, -140, -140, -140, 0, 0, 0, -140, -140, 0, 0, -140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-141, -141, -141, -141, -141, -141, -141, -141, 0, -141, -141, -141, 0, 0, 0, 0, -141, -141, -141, -141, -141, 0, 0, -141, 0, -141, -141, -141, -141, -141, -141, -141, 0, 0, 0, -141, -141, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-142, -142, -142, -142, -142, -142, -142, -142, 0, -142, -142, -142, 0, 0, 0, 0, -142, -142, -142, -142, -142, 0, 0, -142, 0, -142, -142, -142, -142, -142, -142, -142, 0, 0, 0, -142, -142, 0, 0, -142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-143, -143, -143, -143, -143, -143, -143, -143, 0, -143, -143, -143, 0, 0, 0, 0, -143, -143, -143, -143, -143, 0, 0, -143, 0, -143, -143, -143, -143, -143, -143, -143, 0, 0, 0, -143, -143, 0, 0, -143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-144, -144, -144, -144, -144, -144, -144, -144, 0, -144, -144, -144, 0, 0, 0, 0, -144, -144, -144, -144, -144, 0, 0, -144, 0, -144, -144, -144, -144, -144, -144, -144, 0, 0, 0, -144, -144, 0, 0, -144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-145, -145, -145, -145, -145, -145, -145, -145, 0, -145, -145, -145, 0, 0, 0, 0, -145, -145, -145, -145, -145, 0, 0, -145, 0, -145, -145, -145, -145, -145, -145, -145, 0, 0, 0, -145, -145, 0, 0, -145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-146, -146, -146, -146, -146, -146, -146, -146, 0, -146, -146, -146, 0, 0, 0, 0, -146, -146, -146, -146, -146, 0, 0, -146, 0, -146, -146, -146, -146, -146, -146, -146, 0, 0, 0, -146, -146, 0, 0, -146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-147, -147, -147, -147, -147, -147, -147, -147, 0, -147, -147, -147, 0, 0, 0, 0, -147, -147, -147, -147, -147, 0, 0, -147, 0, -147, -147, -147, -147, -147, -147, -147, 0, 0, 0, -147, -147, 0, 0, -147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-148, -148, -148, -148, -148, -148, -148, -148, 0, -148, -148, -148, 0, 0, 0, 0, -148, -148, -148, -148, -148, 0, 0, -148, 0, -148, -148, -148, -148, -148, -148, -148, 0, 0, 0, -148, -148, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-149, -149, -149, -149, -149, -149, -149, -149, 0, -149, -149, -149, 0, 0, 0, 0, -149, -149, -149, -149, -149, 0, 0, -149, 0, -149, -149, -149, -149, -149, -149, -149, 0, 0, 0, -149, -149, 0, 0, -149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-150, -150, -150, -150, -150, -150, -150, -150, 0, -150, -150, -150, 0, 0, 0, 0, -150, -150, -150, -150, -150, 0, 0, -150, 0, -150, -150, -150, -150, -150, -150, -150, 0, 0, 0, -150, -150, 0, 0, -150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-151, -151, -151, -151, -151, -151, -151, -151, 0, -151, -151, -151, 0, 0, 0, 0, -151, -151, -151, -151, -151, 0, 0, -151, 0, -151, -151, -151, -151, -151, -151, -151, 0, 0, 0, -151, -151, 0, 0, -151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-152, -152, -152, -152, -152, -152, -152, -152, 0, -152, -152, -152, 0, 0, 0, 0, -152, -152, -152, -152, -152, 0, 0, -152, 0, -152, -152, -152, -152, -152, -152, -152, 0, 0, 0, -152, -152, 0, 0, -152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-153, -153, -153, -153, -153, -153, -153, -153, 0, -153, -153, -153, 0, 0, 0, 0, -153, -153, -153, -153, -153, 0, 0, -153, 0, -153, -153, -153, -153, -153, -153, -153, 0, 0, 0, -153, -153, 0, 0, -153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-154, -154, -154, -154, 0, 0, -154, -154, 0, -154, -154, -154, 0, 0, 0, 0, -154, -154, -154, -154, -154, 0, 0, -154, 0, -154, -154, -154, -154, -154, -154, -154, 0, 0, 0, -154, -154, 0, 0, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-155, -155, -155, -155, 0, 0, -155, -155, 0, -155, -155, -155, 0, 0, 0, 0, -155, -155, -155, -155, -155, 0, 0, -155, 0, -155, -155, -155, -155, -155, -155, -155, 0, 0, 0, -155, -155, 0, 0, -155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-156, -156, -156, -156, 0, 0, -156, -156, 0, -156, -156, -156, 0, 0, 0, 0, -156, 0, -156, -156, -156, 0, 0, -156, 0, -156, -156, -156, -156, -156, -156, -156, 0, 0, 0, -156, -156, 0, 0, -156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-157, -157, -157, -157, 0, 0, -157, -157, 0, -157, -157, -157, 0, 0, 0, 0, -157, 0, -157, -157, -157, 0, 0, -157, 0, -157, -157, -157, -157, -157, -157, -157, 0, 0, 0, -157, -157, 0, 0, -157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-158, -158, -158, -158, 0, 0, -158, -158, 0, -158, -158, -158, 0, 0, 0, 0, -158, 0, -158, -158, -158, 0, 0, -158, 0, -158, -158, -158, -158, -158, -158, -158, 0, 0, 0, -158, -158, 0, 0, -158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-159, -159, -159, -159, 0, 0, -159, -159, 0, -159, -159, -159, 0, 0, 0, 0, -159, 0, -159, -159, -159, 0, 0, -159, 0, -159, -159, -159, -159, -159, -159, -159, 0, 0, 0, -159, -159, 0, 0, -159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-160, -160, -160, -160, 0, 0, -160, -160, 0, -160, -160, -160, 0, 0, 0, 0, -160, 0, -160, -160, -160, 0, 0, -160, 0, -160, -160, -160, -160, -160, -160, -160, 0, 0, 0, -160, -160, 0, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-161, -161, -161, -161, 0, 0, -161, -161, 0, -161, -161, -161, 0, 0, 0, 0, -161, 0, -161, -161, -161, 0, 0, -161, 0, -161, -161, -161, -161, -161, -161, -161, 0, 0, 0, -161, -161, 0, 0, -161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-162, -162, -162, -162, 0, 0, -162, -162, 0, -162, -162, -162, 0, 0, 0, 0, -162, 0, -162, -162, -162, 0, 0, -162, 0, -162, -162, -162, -162, -162, -162, -162, 0, 0, 0, -162, -162, 0, 0, -162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-163, -163, -163, -163, 0, 0, -163, -163, 0, -163, -163, -163, 0, 0, 0, 0, -163, 0, -163, -163, -163, 0, 0, -163, 0, -163, -163, -163, -163, -163, -163, -163, 0, 0, 0, -163, -163, 0, 0, -163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-164, -164, -164, -164, 0, 0, -164, -164, 0, -164, -164, -164, 0, 0, 0, 0, -164, 0, -164, -164, -164, 0, 0, -164, 0, -164, -164, -164, -164, -164, -164, -164, 0, 0, 0, -164, -164, 0, 0, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-165, -165, -165, -165, 0, 0, -165, -165, 0, -165, -165, -165, 0, 0, 0, 0, -165, 0, -165, -165, -165, 0, 0, -165, 0, -165, -165, -165, -165, -165, -165, -165, 0, 0, 0, -165, -165, 0, 0, -165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-166, -166, -166, -166, 0, 0, -166, -166, 0, -166, -166, -166, 0, 0, 0, 0, -166, 0, -166, -166, -166, 0, 0, -166, 0, -166, -166, -166, -166, -166, -166, -166, 0, 0, 0, -166, -166, 0, 0, -166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-167, -167, -167, -167, 0, 0, -167, -167, 0, -167, -167, -167, 0, 0, 0, 0, -167, 0, -167, -167, -167, 0, 0, -167, 0, -167, -167, -167, -167, -167, -167, -167, 0, 0, 0, -167, -167, 0, 0, -167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-168, -168, -168, -168, 0, 0, -168, -168, 0, -168, -168, -168, 0, 0, 0, 0, -168, 0, -168, -168, -168, 0, 0, -168, 0, -168, -168, -168, -168, -168, -168, -168, 0, 0, 0, -168, -168, 0, 0, -168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-169, -169, -169, -169, 0, 0, -169, -169, 0, -169, -169, -169, 0, 0, 0, 0, -169, 0, -169, -169, -169, 0, 0, -169, 0, -169, -169, -169, -169, -169, -169, -169, 0, 0, 0, -169, -169, 0, 0, -169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-170, -170, -170, -170, 0, 0, -170, -170, 0, -170, -170, -170, 0, 0, 0, 0, -170, 0, -170, -170, -170, 0, 0, -170, 0, -170, -170, -170, -170, -170, -170, -170, 0, 0, 0, -170, -170, 0, 0, -170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-171, -171, -171, -171, 0, 0, -171, -171, 0, -171, -171, -171, 0, 0, 0, 0, -171, 0, -171, -171, -171, 0, 0, -171, 0, -171, -171, -171, -171, -171, -171, -171, 0, 0, 0, -171, -171, 0, 0, -171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -172, 0, 0, 0, 0, 0, -172, 0, -172, 0, -172, 0, 0, 0, 0, 0, 0, 0, 0, -172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -173, 0, 0, 0, 0, 0, -173, 0, -173, 0, -173, 0, 0, 0, 0, 0, 0, 0, 0, -173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-174, -174, -174, -174, 0, 0, -174, -174, 0, -174, -174, -174, 0, 0, 0, 0, -174, 0, -174, -174, -174, 0, 0, -174, 0, -174, -174, -174, -174, -174, -174, -174, 0, 0, 0, -174, -174, 0, 0, -174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-175, -175, -175, -175, 0, 0, -175, -175, 0, -175, -175, -175, 0, 0, 0, 0, -175, 0, -175, -175, -175, 0, 0, -175, 0, -175, -175, -175, -175, -175, -175, -175, 0, 0, 0, -175, -175, 0, 0, -175, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 76, 0, 4, 0, 0, 210, 208, 218, 236, 0, 0, 229, 217, 211, 207, 219, 220, 222, 212, 230, 94, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 228, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 235, 237, 0, 0, 0, 0, 0, 14, 234, 22, 0, 0, 0, 0, 0, 9, 7, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 12, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-20, -20, -20, -20, 0, 0, -20, -20, 0, -20, -20, -20, 0, 0, 0, 0, 8, 0, -20, -20, -20, 0, 0, -20, 0, -20, -20, -20, -20, -20, -20, -20, 0, 0, 0, -20, -20, 0, 0, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 256, 0, 0, 0, 0, 0, 0, 0, 282, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 283, 0, 0, 0, 0},
                {-15, -15, -15, -15, 0, 0, -15, -15, 0, -15, -15, 154, 0, 0, 0, 0, -15, 0, -15, -15, -15, 0, 0, -15, 0, -15, -15, -15, -15, -15, -15, -15, 0, 0, 0, -15, -15, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-16, -16, -16, -16, 0, 0, -16, -16, 0, -16, -16, -16, 0, 0, 0, 0, -16, 0, -16, -16, -16, 0, 0, -16, 0, -16, -16, -16, -16, -16, -16, 213, 0, 0, 0, -16, -16, 0, 0, -16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 156, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 284, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 241, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-112, 0, 0, 0, 0, 0, -112, 0, 0, 0, -112, -112, 0, -112, 285, -112, 0, 0, -112, -112, -112, -112, 0, 0, -112, -112, -112, -112, -112, -112, -112, -112, -112, -112, 0, 0, -112, 0, 0, -112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-113, 0, 0, 0, 0, 0, -113, 0, 0, 0, -113, -113, 0, -113, 286, -113, 0, 0, -113, -113, -113, -113, 0, 0, -113, -113, -113, -113, -113, -113, -113, -113, -113, -113, 0, 0, -113, 0, 0, -113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 291, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0, 0, 0},
                {39, 0, 0, 287, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 76, 0, 16, 0, 0, 210, 208, 218, 236, 0, 0, 229, 217, 211, 207, 219, 220, 222, 212, 230, 94, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 228, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 235, 237, 0, 0, 0, 0, 0, 14, 234, 22, 0, 0, 0, 0, 0, 9, 7, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 12, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {0, -38, 46, 0, 0, 0, 0, -38, 0, -38, 0, -38, 0, 0, 0, 0, 0, 0, 0, 0, -38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -37, 45, 28, 0, 0, 35, -37, 0, -37, 0, -37, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 27, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -26, -26, 28, 0, 0, 35, -26, 0, -26, -26, -26, 0, 0, 0, 0, -26, 0, -26, -26, -26, 0, 0, -26, 0, -26, -26, -26, -26, -26, -26, -26, 0, 0, 0, -26, -26, 0, 0, -26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -27, -27, 28, 0, 0, 35, -27, 0, -27, -27, -27, 0, 0, 0, 0, -27, 0, -27, -27, -27, 0, 0, -27, 0, -27, -27, -27, -27, -27, -27, -27, 0, 0, 0, -27, -27, 0, 0, -27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -29, -29, 28, 0, 0, 35, -29, 0, -29, -29, -29, 0, 0, 0, 0, -29, 0, -29, -29, 32, 0, 0, -29, 0, 289, -29, -29, 219, 220, -29, -29, 0, 0, 0, -29, -29, 0, 0, -29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-78, -78, -78, -78, 0, 123, -78, -78, 0, -78, -78, -78, 0, 0, 0, 0, -78, -78, -78, -78, -78, 0, 0, -78, 0, -78, -78, -78, -78, -78, -78, -78, 0, 0, 0, -78, -78, 0, 0, -78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-80, -80, -80, -80, 0, -80, -80, -80, 0, -80, -80, -80, 0, 0, 0, 0, -80, -80, -80, -80, -80, 0, 0, -80, 0, 124, -80, -80, -80, -80, -80, -80, 0, 0, 0, -80, -80, 0, 0, -80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-143, -143, -143, -143, -143, -143, -143, -143, 0, -143, -143, -143, 0, 0, 0, 0, -143, -143, -143, -143, -143, 0, 0, -143, 0, -143, -143, -143, -143, -143, -143, -143, 0, 0, 0, -143, -143, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 293, 132, 0, 270, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, -176, 0, -176, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 271, 0, 294, 246, 0, 192, 139, 144, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -39, -39, 28, 0, 0, 35, -39, 0, -39, 0, -39, 0, 0, 0, 0, 0, 0, 0, 0, -39, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -40, -40, 28, 0, 0, 35, -40, 0, -40, 0, -40, 0, 0, 0, 0, 0, 0, 0, 0, -40, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, -41, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, -42, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0},
                {-176, -176, 297, -176, 0, 0, -176, -176, 0, -176, -176, -176, 0, -176, 0, -176, -176, 0, -176, -176, -176, -176, 0, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, 0, -176, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0},
                {0, -176, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 76, 0, 104, 0, 0, 210, 208, 218, 236, 0, 0, 229, 217, 211, 207, 219, 220, 222, 212, 230, 94, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 228, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 235, 237, 0, 0, 0, 0, 0, 14, 234, 22, 0, 0, 0, 0, 0, 9, 7, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 12, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 109, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 194, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 139, 0, 0, 0},
                {0, 0, 299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0},
                {0, 0, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-176, -176, 298, -176, 0, 0, -176, -176, 0, -176, -176, -176, 0, -176, 0, -176, -176, 0, -176, -176, -176, -176, 0, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, -176, 0, -176, -176, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0},
                {0, 0, 147, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -103, -103, 28, 0, 0, 35, -103, 0, -103, -103, -103, 0, 0, 0, 0, -103, 0, -103, -103, 32, 0, 0, 37, 0, 289, -103, -103, 219, 220, -103, -103, 0, 0, 0, -103, -103, 0, 0, -103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 76, 0, 164, 0, 0, 210, 208, 218, 236, 0, 0, 229, 217, 211, 207, 219, 220, 222, 212, 230, 94, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 228, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 235, 237, 0, 0, 0, 0, 0, 14, 234, 22, 0, 0, 0, 0, 0, 9, 7, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 12, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 290, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 279, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 175, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 179, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 26, 45, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 275, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 275, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 206, 0, 0, 0, 0, 194, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 205, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 179, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, -176, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 303, 239, 43, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 42, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, -176, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 304, 239, 43, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 42, 0, 0},
                {-15, -15, -15, -15, 305, 0, -15, -15, 0, -15, -15, 154, 0, 0, 0, 0, -15, 0, -15, -15, -15, 0, 0, -15, 0, -15, -15, -15, -15, -15, -15, -15, 0, 0, 0, -15, -15, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 149, 0, 0, 0, 0, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 135, 0, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 194, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 306, 0, 0, 0},
                {-176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 307, 0},
                {0, -173, 0, 0, 0, 0, 0, -173, 0, -173, 0, -173, 0, 0, 0, 0, 0, 0, 0, 0, -173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0},
                {0, -173, 0, 0, 0, 0, 249, -173, 250, -173, 0, -173, 0, 195, 199, 0, 0, 0, 202, 0, -173, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, -173, 0, 0, 0, 0, 0, -173, 0, -173, 0, -173, 0, 195, 199, 0, 0, 0, 202, 0, -173, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 194, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 139, 0, 0, 0},
                {-15, -15, -15, -15, 181, 0, -15, -15, 0, -15, -15, 154, 0, 0, 0, 0, -15, 0, -15, -15, -15, 0, 0, -15, 0, -15, -15, -15, -15, -15, -15, -15, 0, 0, 0, -15, -15, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-25, -25, -25, -25, 0, 0, -25, -25, 0, -25, -25, -25, 0, 0, 0, 0, -25, 48, -25, -25, -25, 0, 0, -25, 0, -25, -25, -25, -25, -25, -25, -25, 0, 0, 0, -25, -25, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, -28, 33, 28, 0, 0, 35, -28, 0, -28, -28, -28, 0, 0, 0, 0, -28, 0, -28, -28, 308, 0, 0, -28, 0, 289, -28, -28, 219, 220, -28, -28, 0, 0, 0, -28, -28, 0, 0, -28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 311, 0, 0, 0, 0, 246, 0, 192, 139, 0, 0, 0},
                {0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {312, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-30, 0, 0, -30, 0, 0, -30, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, -30, 0, 0, -30, 0, -30, 211, 207, -30, -30, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-22, -22, -22, -22, 0, 0, -22, -22, 0, -22, -22, -22, 0, 0, 0, 0, -22, 186, -22, -22, -22, 0, 0, -22, 0, -22, -22, -22, -22, -22, -22, -22, 0, 0, 0, -22, -22, 0, 0, -22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-22, -22, -22, -22, 0, 0, -22, -22, 0, -22, -22, -22, 0, 0, 0, 0, -22, 313, -22, -22, -22, 0, 0, -22, 0, -22, -22, -22, -22, -22, -22, -22, 0, 0, 0, -22, -22, 0, 0, -22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -176, 0, 0, 0, 0, 249, 0, 250, 0, 0, 0, 0, 195, 199, 0, 0, 0, 202, 0, 0, 197, 0, 204, 193, 0, 203, 0, 0, 0, 0, 0, 248, 196, 200, 198, 201, 0, 0, 191, 0, 0, 264, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 265, 0, 0, 246, 0, 315, 139, 116, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 316, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {233, 0, 0, 0, 0, 0, 23, 0, 0, 0, 221, 160, 0, 0, 0, 0, 0, 0, 210, 208, 218, 0, 0, 0, 0, 217, 211, 207, 219, 220, 222, 212, 0, 0, 0, 0, 209, 0, 0, 191, 0, 215, 0, 0, 0, 0, 0, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 317, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 20, 18, 30, 216, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0},
                {-141, -141, -141, -141, -141, -141, -141, -141, 0, -141, -141, -141, 0, 0, 0, 0, -141, -141, -141, -141, -141, 0, 0, -141, 0, -141, -141, -141, -141, -141, -141, -141, 0, 0, 0, -141, -141, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {39, 0, 0, 28, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 32, 0, 0, 37, 0, 289, 0, 0, 219, 220, 0, 0, 0, 0, 0, 173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            };

        public INode Parse(ILexer<INode> lex)
        {
            var current = 0;

            while (true)
            {
                var token = (Token)lex.PeekToken();
                var x = Tables[current, token.InputToken];

                if (x < 0)
                {
                    token = RunAction(x);
                    if (token.IsAccept) return token.Value!;
                    current = TokenStack.Count == 0 ? 0 : TokenStack[^1].TableIndex;
                    x = Tables[current, token.InputToken];

                    token.TableIndex = x;
                    TokenStack.Add(token);
                    current = x;
                }
                else if (x == 0)
                {
                    OnError(lex);
                }
                else
                {
                    _ = lex.ReadToken();
                    token.TableIndex = x;
                    TokenStack.Add(token);
                    current = x;
                }
            }
        }

        public Token RunAction(int yy_no)
        {
            Token? yy_token;
            INode? yy_value = null;

            switch (yy_no)
            {
                case -1:
                    TraceAction("$ACCEPT : start $END");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols._ACCEPT, 2, yy_value);
                    break;

                case -2:
                    TraceAction("start :");
                    yy_value = new ProgramNode();
                    yy_token = DoAction(Symbols.start, 0, yy_value);
                    break;

                case -3:
                    TraceAction("start : program_begin stmt END");
                    yy_value = Scopes.Pop();
                    yy_token = DoAction(Symbols.start, 3, yy_value);
                    break;

                case -4:
                    TraceAction("program_begin : BEGIN");
                    Scopes.Push(new ProgramNode());
                    yy_token = DoAction(Symbols.program_begin, 1, yy_value);
                    break;

                case -5:
                    TraceAction("stmt : void");
                    yy_value = Scopes.Peek();
                    yy_token = DoAction(Symbols.stmt, 1, yy_value);
                    break;

                case -6:
                    TraceAction("stmt : stmt line");
                    yy_value = ((IScopeNode)GetValue(-2)).Return(x => { if (((IStatementNode)GetValue(-1)) is { }) x.Statements.Add(((IStatementNode)GetValue(-1))); });
                    yy_token = DoAction(Symbols.stmt, 2, yy_value);
                    break;

                case -7:
                    TraceAction("line : call EOL");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.line, 2, yy_value);
                    break;

                case -8:
                    TraceAction("line : let EOL");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.line, 2, yy_value);
                    break;

                case -9:
                    TraceAction("line : class");
                    Scopes.Peek().Classes.Add(((ClassNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.line, 1, yy_value);
                    break;

                case -10:
                    TraceAction("line : struct");
                    Scopes.Peek().Structs.Add(((StructNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.line, 1, yy_value);
                    break;

                case -11:
                    TraceAction("line : sub");
                    Scopes.Peek().Functions.Add(((FunctionNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.line, 1, yy_value);
                    break;

                case -12:
                    TraceAction("line : if");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.line, 1, yy_value);
                    break;

                case -13:
                    TraceAction("block : begin stmt END");
                    yy_value = Scopes.Pop();
                    yy_token = DoAction(Symbols.block, 3, yy_value);
                    break;

                case -14:
                    TraceAction("begin : BEGIN");
                    Scopes.Push(new BlockNode().R((GetToken(-1))));
                    yy_token = DoAction(Symbols.begin, 1, yy_value);
                    break;

                case -15:
                    TraceAction("expr : var");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.expr, 1, yy_value);
                    break;

                case -16:
                    TraceAction("expr : str");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.expr, 1, yy_value);
                    break;

                case -17:
                    TraceAction("expr : num");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.expr, 1, yy_value);
                    break;

                case -18:
                    TraceAction("expr : bool");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.expr, 1, yy_value);
                    break;

                case -19:
                    TraceAction("expr : null");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.expr, 1, yy_value);
                    break;

                case -20:
                    TraceAction("expr : call");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.expr, 1, yy_value);
                    break;

                case -21:
                    TraceAction("expr : lambda");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.expr, 1, yy_value);
                    break;

                case -22:
                    TraceAction("expr : '[' list ']'");
                    yy_value = ((ListNode<IEvaluableNode>)GetValue(-2));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -23:
                    TraceAction("expr : '(' expr ')'");
                    yy_value = ((IEvaluableNode)GetValue(-2));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -24:
                    TraceAction("expr : '(' list2n ')'");
                    yy_value = CreateTupleNode(((ListNode<IEvaluableNode>)GetValue(-2))).R((GetToken(-3)));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -25:
                    TraceAction("expr : expr '.' fvar");
                    yy_value = CreatePropertyNode(((IEvaluableNode)GetValue(-3)), ((VariableNode)GetValue(-1))).R((GetToken(-2)));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -26:
                    TraceAction("expr : ope expr");
                    yy_value = CreateFunctionCallNode(((TokenNode)GetValue(-2)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.expr, 2, yy_value);
                    break;

                case -27:
                    TraceAction("expr : expr nope expr");
                    yy_value = CreateFunctionCallNode(((TokenNode)GetValue(-2)), ((IEvaluableNode)GetValue(-3)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -28:
                    TraceAction("expr : expr LT expr");
                    yy_value = CreateFunctionCallNode((GetToken(-2)), ((IEvaluableNode)GetValue(-3)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -29:
                    TraceAction("expr : expr GT expr");
                    yy_value = CreateFunctionCallNode((GetToken(-2)), ((IEvaluableNode)GetValue(-3)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -30:
                    TraceAction("expr : expr LT expr GT");
                    yy_value = CreateSpecialization(((IEvaluableNode)GetValue(-4)), ((IEvaluableNode)GetValue(-2)));
                    yy_token = DoAction(Symbols.expr, 4, yy_value);
                    break;

                case -31:
                    TraceAction("expr : expr LT expr ',' typen GT");
                    yy_value = CreateSpecialization(((IEvaluableNode)GetValue(-6)), ((IEvaluableNode)GetValue(-4)), ((ListNode<ITypeNode>)GetValue(-2)).List.ToArray());
                    yy_token = DoAction(Symbols.expr, 6, yy_value);
                    break;

                case -32:
                    TraceAction("expr : expr '[' expr ']'");
                    yy_value = CreateFunctionCallNode(CreatePropertyNode(((IEvaluableNode)GetValue(-4)), CreateVariableNode("[]")), ((IEvaluableNode)GetValue(-2)));
                    yy_token = DoAction(Symbols.expr, 4, yy_value);
                    break;

                case -33:
                    TraceAction("expr : expr IS type");
                    yy_value = CreateFunctionCallNode((GetToken(-2)), ((IEvaluableNode)GetValue(-3)), ((ITypeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.expr, 3, yy_value);
                    break;

                case -34:
                    TraceAction("call : expr '(' list ')'");
                    yy_value = CreateFunctionCallNode(((IEvaluableNode)GetValue(-4)), ((ListNode<IEvaluableNode>)GetValue(-2)).List.ToArray());
                    yy_token = DoAction(Symbols.call, 4, yy_value);
                    break;

                case -35:
                    TraceAction("list : void");
                    yy_value = CreateListNode<IEvaluableNode>();
                    yy_token = DoAction(Symbols.list, 1, yy_value);
                    break;

                case -36:
                    TraceAction("list : listn extra");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.list, 2, yy_value);
                    break;

                case -37:
                    TraceAction("listn : expr");
                    yy_value = CreateListNode(((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.listn, 1, yy_value);
                    break;

                case -38:
                    TraceAction("listn : list2n");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.listn, 1, yy_value);
                    break;

                case -39:
                    TraceAction("list2n : expr ',' expr");
                    yy_value = CreateListNode(((IEvaluableNode)GetValue(-3)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.list2n, 3, yy_value);
                    break;

                case -40:
                    TraceAction("list2n : list2n ',' expr");
                    yy_value = ((ListNode<IEvaluableNode>)GetValue(-3)).Return(x => x.List.Add(((IEvaluableNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.list2n, 3, yy_value);
                    break;

                case -41:
                    TraceAction("let : LET var EQ expr");
                    yy_value = CreateLetNode(((VariableNode)GetValue(-3)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.let, 4, yy_value);
                    break;

                case -42:
                    TraceAction("let : expr '.' fvar EQ expr");
                    yy_value = CreateLetNode(((IEvaluableNode)GetValue(-5)), ((VariableNode)GetValue(-3)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.let, 5, yy_value);
                    break;

                case -43:
                    TraceAction("let : LET tuplevar2n EQ expr");
                    yy_value = CreateLetTupleNode(((ListNode<ITupleBind>)GetValue(-3)), ((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.let, 4, yy_value);
                    break;

                case -44:
                    TraceAction("tuplevar2n : tuplevar ',' tuplevar");
                    yy_value = CreateListNode(((ITupleBind)GetValue(-3)), ((ITupleBind)GetValue(-1)));
                    yy_token = DoAction(Symbols.tuplevar2n, 3, yy_value);
                    break;

                case -45:
                    TraceAction("tuplevar2n : tuplevar2n ',' tuplevar");
                    yy_value = ((ListNode<ITupleBind>)GetValue(-3)).Return(x => x.List.Add(((ITupleBind)GetValue(-1))));
                    yy_token = DoAction(Symbols.tuplevar2n, 3, yy_value);
                    break;

                case -46:
                    TraceAction("tuplevar : var");
                    yy_value = CreateLetNode(((VariableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.tuplevar, 1, yy_value);
                    break;

                case -47:
                    TraceAction("tuplevar : IGNORE");
                    yy_value = CreateLetIgnoreNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.tuplevar, 1, yy_value);
                    break;

                case -48:
                    TraceAction("struct : STRUCT var EOL struct_block");
                    yy_value = ((StructNode)GetValue(-1)).Return(x => x.Name = ((VariableNode)GetValue(-3)));
                    yy_token = DoAction(Symbols.@struct, 4, yy_value);
                    break;

                case -49:
                    TraceAction("struct : STRUCT var LT genn GT EOL struct_block");
                    yy_value = ((StructNode)GetValue(-1)).Return(x => x.Name = ((VariableNode)GetValue(-6))).Return(x => x.Generics.AddRange(((ListNode<ITypeNode>)GetValue(-4)).List));
                    yy_token = DoAction(Symbols.@struct, 7, yy_value);
                    break;

                case -50:
                    TraceAction("struct_block : struct_begin define END");
                    yy_value = Scopes.Pop();
                    yy_token = DoAction(Symbols.struct_block, 3, yy_value);
                    break;

                case -51:
                    TraceAction("struct_begin : BEGIN");
                    Scopes.Push(new StructNode().R((GetToken(-1))));
                    yy_token = DoAction(Symbols.struct_begin, 1, yy_value);
                    break;

                case -52:
                    TraceAction("define : void");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.define, 1, yy_value);
                    break;

                case -53:
                    TraceAction("define : define LET varx ':' type EOL");
                    Scopes.Peek().Statements.Add(CreateLetNode(((VariableNode)GetValue(-4)), ((ITypeNode)GetValue(-2))));
                    yy_token = DoAction(Symbols.define, 6, yy_value);
                    break;

                case -54:
                    TraceAction("define : define LET varx EQ expr EOL");
                    Scopes.Peek().Statements.Add(CreateLetNode(((VariableNode)GetValue(-4)), ((IEvaluableNode)GetValue(-2))));
                    yy_token = DoAction(Symbols.define, 6, yy_value);
                    break;

                case -55:
                    TraceAction("gen : var");
                    yy_value = new TypeNode { Name = ((VariableNode)GetValue(-1)).Name }.R(((VariableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.gen, 1, yy_value);
                    break;

                case -56:
                    TraceAction("genn : gen");
                    yy_value = CreateListNode(((ITypeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.genn, 1, yy_value);
                    break;

                case -57:
                    TraceAction("genn : genn ',' gen");
                    yy_value = ((ListNode<ITypeNode>)GetValue(-3)).Return(x => x.List.Add(((ITypeNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.genn, 3, yy_value);
                    break;

                case -58:
                    TraceAction("class : CLASS var LT genn GT EOL class_block");
                    yy_value = CreateClassNode(((VariableNode)GetValue(-6)), ((ListNode<ITypeNode>)GetValue(-4)), ((ListNode<FunctionNode>)GetValue(-1)));
                    yy_token = DoAction(Symbols.@class, 7, yy_value);
                    break;

                case -59:
                    TraceAction("class_block : BEGIN condn END");
                    yy_value = ((ListNode<FunctionNode>)GetValue(-2));
                    yy_token = DoAction(Symbols.class_block, 3, yy_value);
                    break;

                case -60:
                    TraceAction("cond : SUB fn where '(' args ')' typex EOL");
                    yy_value = CreateFunctionNode(((VariableNode)GetValue(-7)), ((ListNode<DeclareNode>)GetValue(-4)), ((ITypeNode?)GetValue(-2)), ((ListNode<SpecializationNode>)GetValue(-6)));
                    yy_token = DoAction(Symbols.cond, 8, yy_value);
                    break;

                case -61:
                    TraceAction("cond : SUB fn where '(' typen extra ')' typex EOL");
                    yy_value = CreateFunctionNode(((VariableNode)GetValue(-8)), ((ListNode<ITypeNode>)GetValue(-5)), ((ITypeNode?)GetValue(-2)), ((ListNode<SpecializationNode>)GetValue(-7)));
                    yy_token = DoAction(Symbols.cond, 9, yy_value);
                    break;

                case -62:
                    TraceAction("condn : cond");
                    yy_value = CreateListNode(((FunctionNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.condn, 1, yy_value);
                    break;

                case -63:
                    TraceAction("condn : condn cond");
                    yy_value = ((ListNode<FunctionNode>)GetValue(-2)).Return(x => x.List.Add(((FunctionNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.condn, 2, yy_value);
                    break;

                case -64:
                    TraceAction("sub : SUB fn where '(' args ')' typex EOL sub_block");
                    yy_value = CreateFunctionNode(((FunctionNode)GetValue(-1)), ((VariableNode)GetValue(-8)), ((ListNode<DeclareNode>)GetValue(-5)), ((ITypeNode?)GetValue(-3)), ((ListNode<SpecializationNode>)GetValue(-7)));
                    yy_token = DoAction(Symbols.sub, 9, yy_value);
                    break;

                case -65:
                    TraceAction("sub_block : sub_begin stmt END");
                    yy_value = Scopes.Pop();
                    yy_token = DoAction(Symbols.sub_block, 3, yy_value);
                    break;

                case -66:
                    TraceAction("sub_begin : BEGIN");
                    Scopes.Push(new FunctionNode { LineNumber = (GetToken(-1)).LineNumber });
                    yy_token = DoAction(Symbols.sub_begin, 1, yy_value);
                    break;

                case -67:
                    TraceAction("fn : var");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.fn, 1, yy_value);
                    break;

                case -68:
                    TraceAction("where : void");
                    yy_value = CreateListNode<SpecializationNode>();
                    yy_token = DoAction(Symbols.where, 1, yy_value);
                    break;

                case -69:
                    TraceAction("where : LT wheren GT");
                    yy_value = ((ListNode<SpecializationNode>)GetValue(-2));
                    yy_token = DoAction(Symbols.where, 3, yy_value);
                    break;

                case -70:
                    TraceAction("wheren : spec");
                    yy_value = CreateListNode(((SpecializationNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.wheren, 1, yy_value);
                    break;

                case -71:
                    TraceAction("wheren : wheren spec");
                    yy_value = ((ListNode<SpecializationNode>)GetValue(-2)).Return(x => x.List.Add(((SpecializationNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.wheren, 2, yy_value);
                    break;

                case -72:
                    TraceAction("spec : nsvar LT nsvarn extra GT");
                    yy_value = CreateSpecialization(((ITypeNode)GetValue(-5)), ((ListNode<ITypeNode>)GetValue(-3)));
                    yy_token = DoAction(Symbols.spec, 5, yy_value);
                    break;

                case -73:
                    TraceAction("args : void");
                    yy_value = CreateListNode<DeclareNode>();
                    yy_token = DoAction(Symbols.args, 1, yy_value);
                    break;

                case -74:
                    TraceAction("args : argn extra");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.args, 2, yy_value);
                    break;

                case -75:
                    TraceAction("argn : decla");
                    yy_value = CreateListNode(((DeclareNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.argn, 1, yy_value);
                    break;

                case -76:
                    TraceAction("argn : argn ',' decla");
                    yy_value = ((ListNode<DeclareNode>)GetValue(-3)).Return(x => x.List.Add(((DeclareNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.argn, 3, yy_value);
                    break;

                case -77:
                    TraceAction("decla : var ':' type");
                    yy_value = new DeclareNode(((VariableNode)GetValue(-3)), ((ITypeNode)GetValue(-1))).R(((VariableNode)GetValue(-3)));
                    yy_token = DoAction(Symbols.decla, 3, yy_value);
                    break;

                case -78:
                    TraceAction("type : typev");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.type, 1, yy_value);
                    break;

                case -79:
                    TraceAction("type : typev '?'");
                    yy_value = CreateNullable(((ITypeNode)GetValue(-2)));
                    yy_token = DoAction(Symbols.type, 2, yy_value);
                    break;

                case -80:
                    TraceAction("typev : nsvar");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.typev, 1, yy_value);
                    break;

                case -81:
                    TraceAction("typev : nsvar LT typen extra GT");
                    yy_value = CreateSpecialization(((ITypeNode)GetValue(-5)), ((ListNode<ITypeNode>)GetValue(-3)));
                    yy_token = DoAction(Symbols.typev, 5, yy_value);
                    break;

                case -82:
                    TraceAction("typev : STRUCT var '(' args ')'");
                    yy_value = CreateTypeStructNode(((VariableNode)GetValue(-4)), ((ListNode<DeclareNode>)GetValue(-2)));
                    yy_token = DoAction(Symbols.typev, 5, yy_value);
                    break;

                case -83:
                    TraceAction("typev : '[' type ']'");
                    yy_value = new TypeArrayNode(((ITypeNode)GetValue(-2))).R((GetToken(-3)));
                    yy_token = DoAction(Symbols.typev, 3, yy_value);
                    break;

                case -84:
                    TraceAction("typev : '[' type2n ']'");
                    yy_value = new TypeTupleNode(((ListNode<ITypeNode>)GetValue(-2))).R((GetToken(-3)));
                    yy_token = DoAction(Symbols.typev, 3, yy_value);
                    break;

                case -85:
                    TraceAction("typev : '[' typeor ']'");
                    yy_value = new EnumNode(((ListNode<ITypeNode>)GetValue(-2))).R((GetToken(-3)));
                    yy_token = DoAction(Symbols.typev, 3, yy_value);
                    break;

                case -86:
                    TraceAction("typev : '{' types '}'");
                    yy_value = CreateTypeFunctionNode(((ListNode<ITypeNode>)GetValue(-2)));
                    yy_token = DoAction(Symbols.typev, 3, yy_value);
                    break;

                case -87:
                    TraceAction("typev : '{' types ARROW type '}'");
                    yy_value = CreateTypeFunctionNode(((ListNode<ITypeNode>)GetValue(-4)), ((ITypeNode)GetValue(-2)));
                    yy_token = DoAction(Symbols.typev, 5, yy_value);
                    break;

                case -88:
                    TraceAction("nsvar : varx");
                    yy_value = new TypeNode { Name = ((VariableNode)GetValue(-1)).Name }.R(((VariableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.nsvar, 1, yy_value);
                    break;

                case -89:
                    TraceAction("nsvarn : nsvar");
                    yy_value = CreateListNode<ITypeNode>(((ITypeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.nsvarn, 1, yy_value);
                    break;

                case -90:
                    TraceAction("nsvarn : nsvarn ',' nsvar");
                    yy_value = ((ListNode<ITypeNode>)GetValue(-3)).Return(x => x.List.Add(((ITypeNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.nsvarn, 3, yy_value);
                    break;

                case -91:
                    TraceAction("typex : void");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.typex, 1, yy_value);
                    break;

                case -92:
                    TraceAction("typex : type");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.typex, 1, yy_value);
                    break;

                case -93:
                    TraceAction("types : void");
                    yy_value = CreateListNode<ITypeNode>();
                    yy_token = DoAction(Symbols.types, 1, yy_value);
                    break;

                case -94:
                    TraceAction("types : typen extra");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.types, 2, yy_value);
                    break;

                case -95:
                    TraceAction("typen : type");
                    yy_value = CreateListNode(((ITypeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.typen, 1, yy_value);
                    break;

                case -96:
                    TraceAction("typen : typen ',' type");
                    yy_value = ((ListNode<ITypeNode>)GetValue(-3)).Return(x => x.List.Add(((ITypeNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.typen, 3, yy_value);
                    break;

                case -97:
                    TraceAction("type2n : type ',' typen");
                    yy_value = ((ListNode<ITypeNode>)GetValue(-1)).Return(x => x.List.Insert(0, ((ITypeNode)GetValue(-3))));
                    yy_token = DoAction(Symbols.type2n, 3, yy_value);
                    break;

                case -98:
                    TraceAction("typeor : type OR type");
                    yy_value = CreateListNode(((ITypeNode)GetValue(-3)), ((ITypeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.typeor, 3, yy_value);
                    break;

                case -99:
                    TraceAction("typeor : typeor OR type");
                    yy_value = ((ListNode<ITypeNode>)GetValue(-3)).Return(x => x.List.Add(((ITypeNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.typeor, 3, yy_value);
                    break;

                case -100:
                    TraceAction("lambda : var ARROW lambda_func");
                    yy_value = CreateLambdaFunction(((LambdaExpressionNode)GetValue(-1)), CreateListNode<IDeclareNode>(new ImplicitDeclareNode(((VariableNode)GetValue(-3)))), null, true);
                    yy_token = DoAction(Symbols.lambda, 3, yy_value);
                    break;

                case -101:
                    TraceAction("lambda : '(' ')' typex ARROW lambda_func");
                    yy_value = CreateLambdaFunction(((LambdaExpressionNode)GetValue(-1)), CreateListNode<IDeclareNode>(), ((ITypeNode?)GetValue(-3)), false);
                    yy_token = DoAction(Symbols.lambda, 5, yy_value);
                    break;

                case -102:
                    TraceAction("lambda : ARROW lambda_func");
                    yy_value = CreateLambdaFunction(((LambdaExpressionNode)GetValue(-1)), CreateListNode<IDeclareNode>(), null, true);
                    yy_token = DoAction(Symbols.lambda, 2, yy_value);
                    break;

                case -103:
                    TraceAction("lambda_func : expr");
                    yy_value = ToLambdaExpression(((IEvaluableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.lambda_func, 1, yy_value);
                    break;

                case -104:
                    TraceAction("lambda_func : EOL lambda_begin stmt END");
                    yy_value = ((IScopeNode)GetValue(-2));
                    yy_token = DoAction(Symbols.lambda_func, 4, yy_value);
                    break;

                case -105:
                    TraceAction("lambda_begin : BEGIN");
                    Scopes.Push(new LambdaExpressionNode().R((GetToken(-1))));
                    yy_token = DoAction(Symbols.lambda_begin, 1, yy_value);
                    break;

                case -106:
                    TraceAction("lambda_arg : var");
                    yy_value = new ImplicitDeclareNode(((VariableNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.lambda_arg, 1, yy_value);
                    break;

                case -107:
                    TraceAction("lambda_arg : decla");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.lambda_arg, 1, yy_value);
                    break;

                case -108:
                    TraceAction("lambda_args : void");
                    yy_value = CreateListNode<IDeclareNode>();
                    yy_token = DoAction(Symbols.lambda_args, 1, yy_value);
                    break;

                case -109:
                    TraceAction("lambda_args : lambda_argn extra");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.lambda_args, 2, yy_value);
                    break;

                case -110:
                    TraceAction("lambda_argn : lambda_arg");
                    yy_value = CreateListNode(((IDeclareNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.lambda_argn, 1, yy_value);
                    break;

                case -111:
                    TraceAction("lambda_argn : lambda_argn ',' lambda_arg");
                    yy_value = ((ListNode<IDeclareNode>)GetValue(-3)).Return(x => x.List.Add(((IDeclareNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.lambda_argn, 3, yy_value);
                    break;

                case -112:
                    TraceAction("if : ifthen");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.@if, 1, yy_value);
                    break;

                case -113:
                    TraceAction("if : elseif");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.@if, 1, yy_value);
                    break;

                case -114:
                    TraceAction("if : ifthen ELSE EOL block");
                    yy_value = AddElse(((IIfNode)GetValue(-4)), ((IScopeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.@if, 4, yy_value);
                    break;

                case -115:
                    TraceAction("if : elseif ELSE EOL block");
                    yy_value = AddElse(((IIfNode)GetValue(-4)), ((IScopeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.@if, 4, yy_value);
                    break;

                case -116:
                    TraceAction("if : IF expr THEN NOTEOL expr EOL");
                    yy_value = CreateIfNode(((IEvaluableNode)GetValue(-5)), ToStatementBlock(((IEvaluableNode)GetValue(-2))));
                    yy_token = DoAction(Symbols.@if, 6, yy_value);
                    break;

                case -117:
                    TraceAction("if : IF var ':' type EQ expr THEN NOTEOL expr EOL");
                    yy_value = CreateIfCastNode(((VariableNode)GetValue(-9)), ((ITypeNode)GetValue(-7)), ((IEvaluableNode)GetValue(-5)), ToStatementBlock(((IEvaluableNode)GetValue(-2))));
                    yy_token = DoAction(Symbols.@if, 10, yy_value);
                    break;

                case -118:
                    TraceAction("if : IF '[' list ']' EQ expr THEN NOTEOL expr EOL");
                    yy_value = CreateIfArrayCastNode(ToArrayPattern(((ListNode<IEvaluableNode>)GetValue(-8))), ((IEvaluableNode)GetValue(-5)), ToStatementBlock(((IEvaluableNode)GetValue(-2))));
                    yy_token = DoAction(Symbols.@if, 10, yy_value);
                    break;

                case -119:
                    TraceAction("ifthen : IF expr EOL block");
                    yy_value = CreateIfNode(((IEvaluableNode)GetValue(-3)), ((IScopeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.ifthen, 4, yy_value);
                    break;

                case -120:
                    TraceAction("ifthen : IF var ':' type EQ expr EOL block");
                    yy_value = CreateIfCastNode(((VariableNode)GetValue(-7)), ((ITypeNode)GetValue(-5)), ((IEvaluableNode)GetValue(-3)), ((IScopeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.ifthen, 8, yy_value);
                    break;

                case -121:
                    TraceAction("ifthen : IF '[' list ']' EQ expr EOL block");
                    yy_value = CreateIfArrayCastNode(ToArrayPattern(((ListNode<IEvaluableNode>)GetValue(-6))), ((IEvaluableNode)GetValue(-3)), ((IScopeNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.ifthen, 8, yy_value);
                    break;

                case -122:
                    TraceAction("elseif : ifthen ELSE ifthen");
                    yy_value = ((IIfNode)GetValue(-3)).Return(x => x.ElseIf.Add(((IIfNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.elseif, 3, yy_value);
                    break;

                case -123:
                    TraceAction("elseif : elseif ELSE ifthen");
                    yy_value = ((IIfNode)GetValue(-3)).Return(x => x.ElseIf.Add(((IIfNode)GetValue(-1))));
                    yy_token = DoAction(Symbols.elseif, 3, yy_value);
                    break;

                case -124:
                    TraceAction("switch : SWITCH expr EOL case_block");
                    yy_value = DefaultAction(4);
                    yy_token = DoAction(Symbols.@switch, 4, yy_value);
                    break;

                case -125:
                    TraceAction("case_block : BEGIN casen END");
                    yy_value = DefaultAction(3);
                    yy_token = DoAction(Symbols.case_block, 3, yy_value);
                    break;

                case -126:
                    TraceAction("casen : case");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.casen, 1, yy_value);
                    break;

                case -127:
                    TraceAction("casen : casen case");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.casen, 2, yy_value);
                    break;

                case -128:
                    TraceAction("case : case_expr ARROW expr EOL");
                    yy_value = DefaultAction(4);
                    yy_token = DoAction(Symbols.@case, 4, yy_value);
                    break;

                case -129:
                    TraceAction("case : case_expr ARROW EOL block");
                    yy_value = DefaultAction(4);
                    yy_token = DoAction(Symbols.@case, 4, yy_value);
                    break;

                case -130:
                    TraceAction("case_expr : var ':' type");
                    yy_value = DefaultAction(3);
                    yy_token = DoAction(Symbols.case_expr, 3, yy_value);
                    break;

                case -131:
                    TraceAction("case_expr : '[' array_pattern ']'");
                    yy_value = DefaultAction(3);
                    yy_token = DoAction(Symbols.case_expr, 3, yy_value);
                    break;

                case -132:
                    TraceAction("case_expr : '(' tuple_pattern ')'");
                    yy_value = DefaultAction(3);
                    yy_token = DoAction(Symbols.case_expr, 3, yy_value);
                    break;

                case -133:
                    TraceAction("case_expr : ELSE");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.case_expr, 1, yy_value);
                    break;

                case -134:
                    TraceAction("array_pattern : void");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.array_pattern, 1, yy_value);
                    break;

                case -135:
                    TraceAction("array_pattern : patternn extra");
                    yy_value = DefaultAction(2);
                    yy_token = DoAction(Symbols.array_pattern, 2, yy_value);
                    break;

                case -136:
                    TraceAction("tuple_pattern : pattern ',' patternn extra");
                    yy_value = DefaultAction(4);
                    yy_token = DoAction(Symbols.tuple_pattern, 4, yy_value);
                    break;

                case -137:
                    TraceAction("patternn : pattern");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.patternn, 1, yy_value);
                    break;

                case -138:
                    TraceAction("patternn : patternn ',' pattern");
                    yy_value = DefaultAction(3);
                    yy_token = DoAction(Symbols.patternn, 3, yy_value);
                    break;

                case -139:
                    TraceAction("pattern : var");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.pattern, 1, yy_value);
                    break;

                case -140:
                    TraceAction("var : VAR");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.var, 1, yy_value);
                    break;

                case -141:
                    TraceAction("varx : var");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -142:
                    TraceAction("varx : LET");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -143:
                    TraceAction("varx : STRUCT");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -144:
                    TraceAction("varx : CLASS");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -145:
                    TraceAction("varx : SUB");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -146:
                    TraceAction("varx : IF");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -147:
                    TraceAction("varx : THEN");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -148:
                    TraceAction("varx : ELSE");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -149:
                    TraceAction("varx : SWITCH");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -150:
                    TraceAction("varx : TRUE");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -151:
                    TraceAction("varx : FALSE");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -152:
                    TraceAction("varx : NULL");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -153:
                    TraceAction("varx : IS");
                    yy_value = CreateVariableNode((GetToken(-1)));
                    yy_token = DoAction(Symbols.varx, 1, yy_value);
                    break;

                case -154:
                    TraceAction("fvar : varx");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.fvar, 1, yy_value);
                    break;

                case -155:
                    TraceAction("fvar : NUM");
                    yy_value = CreateVariableNode(((NumericNode)GetValue(-1)).Format).R(((NumericNode)GetValue(-1)));
                    yy_token = DoAction(Symbols.fvar, 1, yy_value);
                    break;

                case -156:
                    TraceAction("num : NUM");
                    yy_value = ((NumericNode)GetValue(-1));
                    yy_token = DoAction(Symbols.num, 1, yy_value);
                    break;

                case -157:
                    TraceAction("num : FLOAT");
                    yy_value = ((FloatingNumericNode)GetValue(-1));
                    yy_token = DoAction(Symbols.num, 1, yy_value);
                    break;

                case -158:
                    TraceAction("bool : TRUE");
                    yy_value = new BooleanNode { Value = true }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.@bool, 1, yy_value);
                    break;

                case -159:
                    TraceAction("bool : FALSE");
                    yy_value = new BooleanNode { Value = false }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.@bool, 1, yy_value);
                    break;

                case -160:
                    TraceAction("null : NULL");
                    yy_value = new NullNode().R((GetToken(-1)));
                    yy_token = DoAction(Symbols.@null, 1, yy_value);
                    break;

                case -161:
                    TraceAction("str : STR");
                    yy_value = new StringNode { Value = (GetToken(-1)).Name }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.str, 1, yy_value);
                    break;

                case -162:
                    TraceAction("str : str STR");
                    yy_value = ((StringNode)GetValue(-2)).Return(x => x.Value += (GetToken(-1)).Name);
                    yy_token = DoAction(Symbols.str, 2, yy_value);
                    break;

                case -163:
                    TraceAction("ope : nope");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.ope, 1, yy_value);
                    break;

                case -164:
                    TraceAction("ope : and");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.ope, 1, yy_value);
                    break;

                case -165:
                    TraceAction("ope : or");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.ope, 1, yy_value);
                    break;

                case -166:
                    TraceAction("ope : LT");
                    yy_value = new TokenNode { Token = (GetToken(-1)) }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.ope, 1, yy_value);
                    break;

                case -167:
                    TraceAction("ope : GT");
                    yy_value = new TokenNode { Token = (GetToken(-1)) }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.ope, 1, yy_value);
                    break;

                case -168:
                    TraceAction("nope : OPE");
                    yy_value = new TokenNode { Token = (GetToken(-1)) }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.nope, 1, yy_value);
                    break;

                case -169:
                    TraceAction("nope : OR");
                    yy_value = new TokenNode { Token = (GetToken(-1)) }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.nope, 1, yy_value);
                    break;

                case -170:
                    TraceAction("and : AND2");
                    yy_value = new TokenNode { Token = (GetToken(-1)) }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.and, 1, yy_value);
                    break;

                case -171:
                    TraceAction("or : OR2");
                    yy_value = new TokenNode { Token = (GetToken(-1)) }.R((GetToken(-1)));
                    yy_token = DoAction(Symbols.or, 1, yy_value);
                    break;

                case -172:
                    TraceAction("extra : void");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.extra, 1, yy_value);
                    break;

                case -173:
                    TraceAction("extra : ','");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.extra, 1, yy_value);
                    break;

                case -174:
                    TraceAction("NOTEOL : EOL");
                    SyntaxError((GetToken(-1)), "not eol");
                    yy_token = DoAction(Symbols.NOTEOL, 1, yy_value);
                    break;

                case -175:
                    TraceAction("NOTEOL : void");
                    yy_value = DefaultAction(1);
                    yy_token = DoAction(Symbols.NOTEOL, 1, yy_value);
                    break;

                case -176:
                    TraceAction("void :");
                    yy_value = null;
                    yy_token = DoAction(Symbols.@void, 0, yy_value);
                    break;

                default:
                    throw new InvalidProgramException();
            }

            return yy_token;
        }

        public Token GetToken(int from_last_index) => TokenStack[TokenStack.Count + from_last_index];

        public INode GetValue(int from_last_index) => GetToken(from_last_index).Value!;

        public INode DefaultAction(int length) => GetValue(-length);

        public bool IsAccept(Token token) => Tables[TokenStack.Count == 0 ? 0 : TokenStack[^1].TableIndex, token.InputToken] != 0;

        public Token DoAction(Symbols type, int length, INode? value) => DoAction(new Token { Type = type }, length, value);

        public Token DoAction(Token token, int length, INode? value)
        {
            token.Value = value;
            TokenStack.RemoveRange(TokenStack.Count - length, length);
            return token;
        }

        public void OnError(ILexer<INode> lex)
        {
            Debug.Fail("syntax error");
            SyntaxError((Token)lex.PeekToken());
        }

        [Conditional("TRACE")]
        public void TraceAction(string s) => Debug.WriteLine(s);
    }
}
